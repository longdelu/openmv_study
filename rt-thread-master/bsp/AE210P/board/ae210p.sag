USER_SECTIONS FSymTab
USER_SECTIONS VSymTab
USER_SECTIONS .rti_fn.0
USER_SECTIONS .rti_fn.0.end
USER_SECTIONS .rti_fn.1
USER_SECTIONS .rti_fn.1.end
USER_SECTIONS .rti_fn.2
USER_SECTIONS .rti_fn.2.end
USER_SECTIONS .rti_fn.3
USER_SECTIONS .rti_fn.3.end
USER_SECTIONS .rti_fn.4
USER_SECTIONS .rti_fn.4.end
USER_SECTIONS .rti_fn.5
USER_SECTIONS .rti_fn.5.end
USER_SECTIONS .rti_fn.6
USER_SECTIONS .rti_fn.6.end
USER_SECTIONS .rti_fn.7
USER_SECTIONS .rti_fn.7.end
FLASH1 0x0
{
	ROM 0x0 0x80000 ; EILM_SIZE <= 512KB
	{
	    * (+RO)
	    
		. = ALIGN(4);
		ADDR __fsymtab_start
		* KEEP( FSymTab )
		. = ALIGN(4);
		ADDR __fsymtab_end
		. = ALIGN(4);
		ADDR __vsymtab_start
		* KEEP( VSymTab )
		. = ALIGN(4);
		ADDR __vsymtab_end
		. = ALIGN(4);
		ADDR __rt_init_start
		* KEEP( .rti_fn.0 )
		* KEEP( .rti_fn.0.end )
		* KEEP( .rti_fn.1 )
		* KEEP( .rti_fn.1.end )
		* KEEP( .rti_fn.2 )
		* KEEP( .rti_fn.2.end )
		* KEEP( .rti_fn.3 )
		* KEEP( .rti_fn.3.end )
		* KEEP( .rti_fn.4 )
		* KEEP( .rti_fn.4.end )
		* KEEP( .rti_fn.5 )
		* KEEP( .rti_fn.5.end )
		* KEEP( .rti_fn.6 )
		* KEEP( .rti_fn.6.end )
		* KEEP( .rti_fn.7 )
		* KEEP( .rti_fn.7.end )
		. = ALIGN(4);
		ADDR __rt_init_end
	}
	
;	RAM 0x200000 0x80000 ; EDLM_SIZE <= 512KB
	RAM 0x200000 0x50000 ; EDLM_SIZE <= 320KB
	{
		LOADADDR NEXT __rw_lma_start
		ADDR NEXT __rw_vma_start
		*(+RW)
		LOADADDR NEXT __rw_lma_end
		*(+ZI)
;		STACK = 0x27fff8 ; 512KB
		STACK = 0x24fff8 ; 320KB
	}	
}